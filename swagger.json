{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Wallet",
    "description": "REST API Application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "http://localhost:3001"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    },
    {
      "name": "Statistics",
      "description": "Categories endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "bill@domain.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123qwerty"
                  },
                  "userName": {
                    "type": "string",
                    "example": "Bill"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "responses status",
                      "example": "success"
                    },
                    "code": {
                      "type": "string",
                      "description": "responses code",
                      "example": "201"
                    },
                    "message": {
                      "type": "string",
                      "description": "responses message",
                      "example": "User created"
                    },
                    "data": {
                      "type": "object",
                      "description": "responses data",
                      "example": {
                        "userName": "Bill",
                        "email": "bill@domain.com",
                        "avatar": "https://path.to.image",
                        "verify:": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Data fails to match the required pattern"
                    }
                  }
                }
              }
            }
          },

          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Provided email already in use"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Field email must be a valid email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "bill@domain.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123qwerty"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "responses code",
                      "example": "You have logged in"
                    },
                    "data": {
                      "type": "object",
                      "description": "responses data",
                      "example": {
                        "token": "someHASH",
                        "email": "bill@domain.com",
                        "userName": "Bill",
                        "avatar": "https://path.to.image",
                        "balance": 1400000,
                        "transactionCategories": [
                          {
                            "id": "321321321",
                            "name": "Food",
                            "isInc": false,
                            "color": "#ffffff",
                            "isActive": true
                          },
                          {
                            "id": "321345621",
                            "name": "Cloth",
                            "isInc": false,
                            "color": "#bbffff",
                            "isActive": true
                          },
                          {
                            "id": "387721321",
                            "name": "Car",
                            "isInc": false,
                            "color": "#ff22ff",
                            "isActive": true
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Data fails to match the required pattern"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "'User not validating' or 'Unauthorized'",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "`User not validating, check 'bill@domain.com' for 'Confirmation of registration' request` or `Email or password is wrong`"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Field email must be a valid email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "Logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Field email must be a valid email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "tags": ["Users"],
        "summary": "User verification via e-mail",
        "parameters": [],
        "requestBody": {
          "description": "Sending email verification",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "bill@domain.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success sending email ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification email sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "`Missing required field email` or `The verification already done`"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email has not been verified"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "responses code",
                      "example": "You have logged in"
                    },
                    "data": {
                      "type": "object",
                      "description": "responses data",
                      "example": {
                        "token": "someHASH",
                        "email": "bill@domain.com",
                        "userName": "Bill",
                        "avatar": "https://path.to.image",
                        "balance": 1400000,
                        "transactionCategories": [
                          {
                            "id": "321321321",
                            "name": "Food",
                            "isInc": false,
                            "color": "#ffffff",
                            "isActive": true
                          },
                          {
                            "id": "321345621",
                            "name": "Cloth",
                            "isInc": false,
                            "color": "#bbffff",
                            "isActive": true
                          },
                          {
                            "id": "387721321",
                            "name": "Car",
                            "isInc": false,
                            "color": "#ff22ff",
                            "isActive": true
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No valid token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Field email must be a valid email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/verify/:verificationToken": {
      "get": {
        "tags": ["Users"],
        "summary": " get verificationToken from URL",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification successful"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Field email must be a valid email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/avatars": {
      "patch": {
        "tags": ["Users"],
        "summary": "User avatar",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "avatar",
            "in": "query",
            "description": "upload a new avatar",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "file"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Image updated"
                    },
                    "avatarURL": {
                      "type": "string",
                      "example": "http://localhost:3000/no-picture.svg"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Upload file failed"
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ]
        }
      }
    },
    "/api/users/update": {
      "put": {
        "tags": ["Users"],
        "summary": "User info update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "User info change",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "SuperEuroShadowNinja"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "responses status",
                      "example": "success"
                    },
                    "code": {
                      "type": "string",
                      "description": "responses code",
                      "example": "201"
                    },
                    "message": {
                      "type": "string",
                      "description": "responses message",
                      "example": "User created"
                    },
                    "data": {
                      "type": "object",
                      "description": "responses data",
                      "example": {
                        "userName": "SuperEuroShadowNinja",
                        "email": "bill@domain.com",
                        "avatar": "https://path.to.image",
                        "verify:": false
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ]
        }
      }
    },
    "/api/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Create a new transaction",
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "number",
                    "example": "1644926173283"
                  },
                  "isIncome": {
                    "type": "boolean",
                    "example": "true"
                  },
                  "categoryId": {
                    "type": "string",
                    "example": "someHASH"
                  },
                  "comment": {
                    "type": "string",
                    "example": "Winning the lottery"
                  },
                  "amount": {
                    "type": "number",
                    "example": "1000000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required field"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Please relogin and try agin"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to add transaction"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get all transactions. Can be filtered by month and year",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "type": "object",
                "example": {
                  "balance": 1400000,
                  "transactions": [
                    {
                      "id": "someHASH",
                      "owner": "UserId",
                      "date": 1644926173283,
                      "isIncome": true,
                      "categoryId": "someHASH",
                      "comment": "Winning the lottery",
                      "amount": 1000000,
                      "balance": 1400000
                    },
                    {
                      "id": "someHASH",
                      "owner": "UserId",
                      "date": 1644926173600,
                      "isIncome": false,
                      "categoryId": "someHASH",
                      "comment": "By icecream",
                      "amount": 50,
                      "balance": 1399950
                    },
                    {
                      "id": "someHASH",
                      "owner": "UserId",
                      "date": 1644926174561,
                      "isIncome": false,
                      "categoryId": "someHASH",
                      "comment": "Travel",
                      "amount": 1000,
                      "balance": 1398950
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Please relogin and try agin"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "number",
                      "example": "500"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/statistics?year=value&month=value": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get statistic per month by existing categories",
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllStatistics"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "code": {
                      "type": "number",
                      "example": "401"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "number",
                      "example": "500"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6193b4f36a453535c5b9cfe3"
          },
          "token": {
            "type": "string",
            "example": "someHash"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "userName": {
            "type": "string",
            "example": "Nick"
          },
          "avatarURL": {
            "type": "string",
            "example": "https://path.to.image"
          },
          "balance": {
            "type": "Number",
            "example": 1400000
          },
          "transactionCategories": {
            "type": "array",
            "example": " An array of objects 'category'"
          },
          "verificationToken": {
            "type": "string",
            "example": "token"
          },
          "verify": {
            "type": "boolean",
            "example": "true"
          },
          "password": {
            "type": "string",
            "example": "$2a$10$7/ZJpglAhQnMKAmshacmSe.Gx8pMni4jDIVPykJ9.gGobeZCsYqou"
          },

          "createdAt": {
            "type": "string",
            "example": "2022-02-15T00:39:16.522Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2022-02-15T08:40:35.295Z"
          }
        }
      },
      "AllTransactions": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "Number",
            "example": 1400000
          },
          "transactions": {
            "type": "array",
            "example": "An array of objects 'transaction'"
          }
        }
      },
      "transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "String",
            "example": "someHASH"
          },
          "owner": {
            "type": "String",
            "example": "UserId"
          },
          "date": {
            "type": "Number",
            "example": 1644926173283
          },
          "isIncome": {
            "type": "boolean",
            "example": "true"
          },
          "categoryId": {
            "type": "string",
            "example": "someHASH"
          },
          "comment": {
            "type": "String",
            "example": "Winning the lottery"
          },
          "amount": {
            "type": "number",
            "example": 1000000
          },
          "balance": {
            "type": "number",
            "example": 1400000
          }
        }
      },
      "AllStatistics": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "example": "An array of objects 'categoryPerMonth' with spend sum"
          },
          "total": {
            "type": "object",
            "properties": {
              "expense": {
                "type": "number",
                "example": 240000
              },
              "income": {
                "type": "Number",
                "example": 1400000
              }
            }
          }
        }
      },
      "categoryPerMonth": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "example": "someHash"
          },
          "sum": {
            "type": "Number",
            "example": 1000
          }
        }
      },
      "category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "someHash"
          },
          "isInc": {
            "type": "boolean",
            "example": "true"
          },
          "categoryName": {
            "type": "string",
            "example": "Food"
          },
          "color": {
            "type": "string",
            "example": "#ff22ff"
          },
          "isActive": {
            "type": "boolean",
            "example": "true"
          }
        }
      }
    }
  }
}
